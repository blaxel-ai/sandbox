openapi: 3.0.0
info:
  contact: {}
  description: API for manipulating filesystem, processes and network.
  title: Sandbox API
  version: 0.0.1
paths:
  "/filesystem/{path}":
    delete:
      description: Delete a file or directory
      parameters:
        - description: File or directory path
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: Delete directory recursively
          in: query
          name: recursive
          schema:
            type: boolean
      responses:
        "200":
          description: Success message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "404":
          description: File or directory not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Delete file or directory
      tags:
        - filesystem
    get:
      description: Get content of a file or listing of a directory
      parameters:
        - description: File or directory path
          in: path
          name: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Directory listing
          content:
            application/json:
              schema:
                oneOf:
                    - $ref: "#/components/schemas/Directory"
                    - $ref: "#/components/schemas/FileWithContent"
        "404":
          description: File or directory not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get file or directory information
      tags:
        - filesystem
    put:
      description: Create or update a file or directory
      parameters:
        - description: File or directory path
          in: path
          name: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileRequest"
        description: File or directory details
        required: true
      responses:
        "200":
          description: Success message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Create or update a file or directory
      tags:
        - filesystem
  "/network/process/{pid}/monitor":
    delete:
      description: Stop monitoring for new ports opened by a process
      parameters:
        - description: Process ID
          in: path
          name: pid
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Object containing PID and success message
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        "400":
          description: Invalid process ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Stop monitoring ports for a process
      tags:
        - network
    post:
      description: Start monitoring for new ports opened by a process
      parameters:
        - description: Process ID
          in: path
          name: pid
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PortMonitorRequest"
        description: Port monitor configuration
        required: true
      responses:
        "200":
          description: Object containing PID and success message
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Start monitoring ports for a process
      tags:
        - network
  "/network/process/{pid}/ports":
    get:
      description: Get a list of all open ports for a process
      parameters:
        - description: Process ID
          in: path
          name: pid
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Object containing PID and array of network.PortInfo
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        "400":
          description: Invalid process ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get open ports for a process
      tags:
        - network
  /process:
    get:
      description: Get a list of all running and completed processes
      responses:
        "200":
          description: Process list
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProcessResponse"
                type: array
      summary: List all processes
      tags:
        - process
    post:
      description: Execute a command and return process information
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessRequest"
        description: Process execution request
        required: true
      responses:
        "200":
          description: Process information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Execute a command
      tags:
        - process
  "/process/{identifier}":
    delete:
      description: Gracefully stop a running process
      parameters:
        - description: Process identifier (PID or name)
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Process stopped
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "404":
          description: Process not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Stop a process
      tags:
        - process
    get:
      description: Get information about a process by its PID or name
      parameters:
        - description: Process identifier (PID or name)
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Process information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessResponse"
        "404":
          description: Process not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get process by identifier
      tags:
        - process
  "/process/{identifier}/kill":
    delete:
      description: Forcefully kill a running process
      parameters:
        - description: Process identifier (PID or name)
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Process killed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "404":
          description: Process not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Kill a process
      tags:
        - process
  "/process/{identifier}/logs":
    get:
      description: Get the stdout and stderr output of a process
      parameters:
        - description: Process identifier (PID or name)
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Process logs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessLogs"
        "404":
          description: Process not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get process logs
      tags:
        - process
  "/process/{identifier}/logs/stream":
    get:
      description: Streams the stdout and stderr output of a process in real time, one line per log, prefixed with 'stdout:' or 'stderr:'. Closes when the process exits or the client disconnects.
      parameters:
        - description: Process identifier (PID or name)
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Stream of process logs, one line per log (prefixed with stdout:/stderr:)
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Process not found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Stream process logs in real time
      tags:
        - process
  "/watch/filesystem/{path}":
    get:
      description: Streams the path of modified files (one per line) in the given directory. Closes when the client disconnects.
      parameters:
        - description: Ignore patterns (comma-separated)
          in: query
          name: ignore
          schema:
            type: string
        - description: Directory path to watch
          in: path
          name: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Stream of modified file paths, one per line
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid path
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Stream file modification events in a directory
      tags:
        - filesystem
  "/ws/process/{identifier}/logs/stream":
    get:
      description: Streams the stdout and stderr output of a process in real time as JSON messages.
      parameters:
        - description: Process identifier (PID or name)
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        "101":
          description: WebSocket connection established
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Process not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Stream process logs in real time via WebSocket
      tags:
        - process
  "/ws/watch/filesystem/{path}":
    get:
      description: Streams JSON events of modified files in the given directory. Closes when the client disconnects.
      parameters:
        - description: Directory path to watch
          in: path
          name: path
          required: true
          schema:
            type: string
      responses:
        "101":
          description: WebSocket connection established
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid path
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Stream file modification events in a directory via WebSocket
      tags:
        - filesystem
servers:
  - url: https://run.blaxel.ai/{workspace_id}/sandboxes/{sandbox_id}
    variables:
      workspace_id:
        default: unknown
      sandbox_id:
        default: unknown
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Directory:
      properties:
        files:
          items:
            $ref: "#/components/schemas/File"
          type: array
        name:
          type: string
        path:
          type: string
        subdirectories:
          description: "@name Subdirectories"
          items:
            $ref: "#/components/schemas/Subdirectory"
          type: array
      required:
        - files
        - name
        - path
        - subdirectories
      type: object
    ErrorResponse:
      properties:
        error:
          example: Error message
          type: string
      required:
        - error
      type: object
    File:
      properties:
        group:
          type: string
        lastModified:
          type: string
        name:
          type: string
        owner:
          type: string
        path:
          type: string
        permissions:
          type: string
        size:
          type: integer
      required:
        - group
        - lastModified
        - name
        - owner
        - path
        - permissions
        - size
      type: object
    FileRequest:
      properties:
        content:
          example: file contents here
          type: string
        isDirectory:
          example: false
          type: boolean
        permissions:
          example: "0644"
          type: string
      type: object
    FileWithContent:
      properties:
        content:
          type: string
        group:
          type: string
        lastModified:
          type: string
        name:
          type: string
        owner:
          type: string
        path:
          type: string
        permissions:
          type: string
        size:
          type: integer
      required:
        - content
        - group
        - lastModified
        - name
        - owner
        - path
        - permissions
        - size
      type: object
    PortMonitorRequest:
      properties:
        callback:
          description: URL to call when a new port is detected
          example: http://localhost:3000/callback
          type: string
      type: object
    ProcessLogs:
      properties:
        logs:
          example: logs output
          type: string
        stderr:
          example: stderr output
          type: string
        stdout:
          example: stdout output
          type: string
      required:
        - logs
        - stderr
        - stdout
      type: object
    ProcessRequest:
      properties:
        command:
          example: ls -la
          type: string
        env:
          additionalProperties:
            type: string
          example:
            "{\"PORT\"": ' "3000"}'
          type: object
        name:
          example: my-process
          type: string
        timeout:
          example: 30
          type: integer
        waitForCompletion:
          example: false
          type: boolean
        waitForPorts:
          example:
            - 3000
            - 8080
          items:
            type: integer
          type: array
        workingDir:
          example: /home/user
          type: string
      required:
        - command
      type: object
    ProcessResponse:
      properties:
        command:
          example: ls -la
          type: string
        completedAt:
          example: Wed, 01 Jan 2023 12:01:00 GMT
          type: string
        exitCode:
          example: 0
          type: integer
        logs:
          example: logs output
          type: string
        name:
          example: my-process
          type: string
        pid:
          example: "1234"
          type: string
        startedAt:
          example: Wed, 01 Jan 2023 12:00:00 GMT
          type: string
        status:
          enum:
            - failed
            - killed
            - stopped
            - running
            - completed
          example: running
          type: string
        workingDir:
          example: /home/user
          type: string
      required:
        - command
        - completedAt
        - exitCode
        - logs
        - name
        - pid
        - startedAt
        - status
        - workingDir
      type: object
    Subdirectory:
      properties:
        name:
          type: string
        path:
          type: string
      required:
        - name
        - path
      type: object
    SuccessResponse:
      properties:
        message:
          example: File created successfully
          type: string
        path:
          example: /path/to/file
          type: string
      required:
        - message
      type: object
security:
  - BearerAuth: []
