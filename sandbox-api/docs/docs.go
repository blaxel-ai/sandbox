// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/filesystem/{path}": {
            "get": {
                "description": "Get content of a file or listing of a directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filesystem"
                ],
                "summary": "Get file or directory information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File or directory path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Directory listing",
                        "schema": {
                            "$ref": "#/definitions/Directory"
                        }
                    },
                    "404": {
                        "description": "File or directory not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Create or update a file or directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filesystem"
                ],
                "summary": "Create or update a file or directory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File or directory path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "File or directory details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a file or directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filesystem"
                ],
                "summary": "Delete file or directory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File or directory path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Delete directory recursively",
                        "name": "recursive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "File or directory not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/network/process/{pid}/monitor": {
            "post": {
                "description": "Start monitoring for new ports opened by a process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "summary": "Start monitoring ports for a process",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Process ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Port monitor configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PortMonitorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object containing PID and success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Stop monitoring for new ports opened by a process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "summary": "Stop monitoring ports for a process",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Process ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object containing PID and success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid process ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/network/process/{pid}/ports": {
            "get": {
                "description": "Get a list of all open ports for a process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "summary": "Get open ports for a process",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Process ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object containing PID and array of network.PortInfo",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid process ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process": {
            "get": {
                "description": "Get a list of all running and completed processes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "List all processes",
                "responses": {
                    "200": {
                        "description": "Process list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProcessResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Execute a command and return process information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Execute a command",
                "parameters": [
                    {
                        "description": "Process execution request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProcessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process information",
                        "schema": {
                            "$ref": "#/definitions/ProcessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process/{identifier}": {
            "get": {
                "description": "Get information about a process by its PID or name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Get process by identifier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process information",
                        "schema": {
                            "$ref": "#/definitions/ProcessResponse"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Gracefully stop a running process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Stop a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process stopped",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process/{identifier}/kill": {
            "delete": {
                "description": "Forcefully kill a running process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Kill a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process killed",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process/{identifier}/logs": {
            "get": {
                "description": "Get the stdout and stderr output of a process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Get process logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process logs",
                        "schema": {
                            "$ref": "#/definitions/ProcessLogs"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process/{identifier}/logs/stream": {
            "get": {
                "description": "Streams the stdout and stderr output of a process in real time, one line per log, prefixed with 'stdout:' or 'stderr:'. Closes when the process exits or the client disconnects.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Stream process logs in real time",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of process logs, one line per log (prefixed with stdout:/stderr:)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/watch/filesystem/{path}": {
            "get": {
                "description": "Streams the path of modified files (one per line) in the given directory. Closes when the client disconnects.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "filesystem"
                ],
                "summary": "Stream file modification events in a directory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ignore patterns (comma-separated)",
                        "name": "ignore",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Directory path to watch",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of modified file paths, one per line",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid path",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ws/process/{identifier}/logs/stream": {
            "get": {
                "description": "Streams the stdout and stderr output of a process in real time as JSON messages.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Stream process logs in real time via WebSocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ws/watch/filesystem/{path}": {
            "get": {
                "description": "Streams JSON events of modified files in the given directory. Closes when the client disconnects.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filesystem"
                ],
                "summary": "Stream file modification events in a directory via WebSocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Directory path to watch",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid path",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Directory": {
            "type": "object",
            "required": [
                "files",
                "name",
                "path",
                "subdirectories"
            ],
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/File"
                    }
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "subdirectories": {
                    "description": "@name Subdirectories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Subdirectory"
                    }
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "File": {
            "type": "object",
            "required": [
                "group",
                "lastModified",
                "name",
                "owner",
                "path",
                "permissions",
                "size"
            ],
            "properties": {
                "group": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "permissions": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "FileRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "file contents here"
                },
                "isDirectory": {
                    "type": "boolean",
                    "example": false
                },
                "permissions": {
                    "type": "string",
                    "example": "0644"
                }
            }
        },
        "FileWithContent": {
            "type": "object",
            "required": [
                "content",
                "group",
                "lastModified",
                "name",
                "owner",
                "path",
                "permissions",
                "size"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "permissions": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "PortMonitorRequest": {
            "type": "object",
            "properties": {
                "callback": {
                    "description": "URL to call when a new port is detected",
                    "type": "string",
                    "example": "http://localhost:3000/callback"
                }
            }
        },
        "ProcessLogs": {
            "type": "object",
            "required": [
                "logs",
                "stderr",
                "stdout"
            ],
            "properties": {
                "logs": {
                    "type": "string",
                    "example": "logs output"
                },
                "stderr": {
                    "type": "string",
                    "example": "stderr output"
                },
                "stdout": {
                    "type": "string",
                    "example": "stdout output"
                }
            }
        },
        "ProcessRequest": {
            "type": "object",
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "type": "string",
                    "example": "ls -la"
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "{\"PORT\"": " \"3000\"}"
                    }
                },
                "maxRestarts": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "my-process"
                },
                "restartOnFailure": {
                    "type": "boolean",
                    "example": false
                },
                "timeout": {
                    "type": "integer",
                    "example": 30
                },
                "waitForCompletion": {
                    "type": "boolean",
                    "example": false
                },
                "waitForPorts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        3000,
                        8080
                    ]
                },
                "workingDir": {
                    "type": "string",
                    "example": "/home/user"
                }
            }
        },
        "ProcessResponse": {
            "type": "object",
            "required": [
                "command",
                "completedAt",
                "currentRestarts",
                "exitCode",
                "logs",
                "maxRestarts",
                "name",
                "pid",
                "restartOnFailure",
                "startedAt",
                "status",
                "workingDir"
            ],
            "properties": {
                "command": {
                    "type": "string",
                    "example": "ls -la"
                },
                "completedAt": {
                    "type": "string",
                    "example": "Wed, 01 Jan 2023 12:01:00 GMT"
                },
                "currentRestarts": {
                    "type": "integer",
                    "example": 1
                },
                "exitCode": {
                    "type": "integer",
                    "example": 0
                },
                "logs": {
                    "type": "string",
                    "example": "logs output"
                },
                "maxRestarts": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "my-process"
                },
                "pid": {
                    "type": "string",
                    "example": "1234"
                },
                "restartOnFailure": {
                    "type": "boolean",
                    "example": false
                },
                "startedAt": {
                    "type": "string",
                    "example": "Wed, 01 Jan 2023 12:00:00 GMT"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "failed",
                        "killed",
                        "stopped",
                        "running",
                        "completed"
                    ],
                    "example": "running"
                },
                "workingDir": {
                    "type": "string",
                    "example": "/home/user"
                }
            }
        },
        "Subdirectory": {
            "type": "object",
            "required": [
                "name",
                "path"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "SuccessResponse": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "File created successfully"
                },
                "path": {
                    "type": "string",
                    "example": "/path/to/file"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "run.blaxel.ai/{workspace_id}/sandboxes/{sandbox_id}",
	BasePath:         "",
	Schemes:          []string{"https"},
	Title:            "Sandbox API",
	Description:      "API for manipulating filesystem, processes and network.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
